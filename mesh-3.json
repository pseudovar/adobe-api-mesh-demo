{
    "meshConfig": {
        "sources": [
            {
                "name": "AdobeCommerceGQL",
                "handler": {
                    "graphql": {
                        "endpoint": "https://venia.magento.com/graphql"
                    }
                }
            },
            {
                "name": "Pricing",
                "handler": {
                    "JsonSchema": {
                        "baseUrl": "https://adobeioruntime.net/api/v1/web/283976-319tealcat-stage/default",
                        "operations": [
                            {
                                "type": "Query",
                                "field": "demo",
                                "path": "/demo?skus={args.skus}",
                                "method": "GET",
                                "argTypeMap": {
                                    "skus": {
                                        "type": "string"
                                    }
                                },
                                "responseSample": "./demoResponse.json"
                            }
                        ]
                    }
                }
            },
            {
                "name": "Countries",
                "handler": {
                    "graphql": {
                        "endpoint": "https://countries.trevorblades.com/"
                    }
                },
                "transforms": [
                    {
                        "rename": {
                            "renames": [
                                {
                                    "from": {
                                        "type": "Query",
                                        "field": "country"
                                    },
                                    "to": {
                                        "type": "Query",
                                        "field": "regioncountry"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        ],
        "additionalTypeDefs": "extend type SimpleProduct {\n    demoDetails: query_demo_products_items \n}\n",
        "additionalResolvers": ["./additional-resolvers.js"],
        "files": [
            {
                "path": "./demoResponse.json",
                "content": "{\n    \"products\": [\n        {\n            \"location\": \"Warehouse A\",\n            \"price\": 9.99,\n            \"quantity\": 21,\n            \"sku\": \"va\",\n            \"ziocode\": 785585\n        }\n    ]\n}"
            },
            {
                "path": "./additional-resolvers.js",
                "content": "const resolvers = {\n  SimpleProduct: {\n    price_range: {\n      selectionSet: \"{ sku }\",\n      resolve: (root, args, context, info) => {\n        if (context.productsData) {\n          return pricingResponse(context.productsData, root)\n        }\n        return context.Pricing.Query.demo({\n          root,\n          args: {\n            skus: `${root.sku}`\n          },\n          context,\n          info,\n          selectionSet: \"{ products { sku location quantity price ziocode} }\"\n        }).then((response) => {\n          context.productsData = response.products\n          return pricingResponse(context.productsData, root)\n        })\n\n      }\n    },\n    demoDetails: {\n      selectionSet: /* GraphQL */ `\n        {\n          sku\n        }\n      `,\n      resolve(root, _args, context, info) {\n        if (context.productsData) {\n          return context.productsData.filter((product) => product.sku === root.sku)[0]\n        }\n        return context.Pricing.Query.demo({\n          root,\n          args: {\n            skus: `${root.sku}`\n          },\n          context,\n          info,\n          selectionSet: \"{ products { sku location quantity price ziocode} }\"\n        }).then((response) => {\n          context.productsData = response.products\n          return response.products.filter((product) => product.sku === root.sku)[0];\n        })\n      }\n    }\n  }\n}\n\nconst pricingResponse = (productsData, root) => {\n  const product = productsData.filter((product) => product.sku === root.sku)[0]\n  return {\n    minimum_price: {\n      regular_price: {\n        value: product.price,\n        currency: `USD`\n      }\n    },\n    maximum_price: {\n      regular_price: {\n        value: product.price,\n        currency: `USD`\n      }\n    }\n  } \n}\n\nmodule.exports = {\n  resolvers\n}\n"
            }
        ],

        "responseConfig": {
            "CORS": {
                "methods": ["GET", "POST"],
                "origin": [
                    "http://127.0.0.1:3000",
                    "http://localhost:3000",
                    "https://199ow0-3000.csb.app",
                    "https://oi6lsz-3000.csb.app",
                    "https://yy8x61-3000.csb.app",
                    "https://uso3ci.csb.app",
                    "https://codesandbox.io",
                    "https://astro-commerce-sooty.vercel.app"
                ],
                "exposedHeaders": ["demo-version"]
            },
            "headers": {
                "demo-version": "3"
            }
        }
    }
}
